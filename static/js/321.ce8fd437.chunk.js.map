{"version":3,"file":"static/js/321.ce8fd437.chunk.js","mappings":"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","sources":["components/Select/Select.styled.jsx","helpers/makeOptions.js","components/Select/Select.jsx","helpers/makeUniqueCarsAndSort.js","helpers/makePriceArr.js","components/Filter/Filter.styled.jsx","components/Buttons/SearchButton/SearchButton.styled.jsx","components/Buttons/SearchButton/SearchButton.jsx","components/Buttons/ClearButton/ClearButton.styled.jsx","components/Buttons/ClearButton/ClearButton.jsx","components/Filter/Filter.jsx","redux/cars/carsSelectors.js","components/Buttons/LoadMoreBtn/LoadMoreBtn.styled.jsx","components/Buttons/LoadMoreBtn/LoadMoreBtn.jsx","redux/filter/filterSelectors.js","helpers/getFilteredCars.js","pages/Catalog.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport Select from 'react-select';\n\nexport const SelectWrap = styled.div`\n  width: ${props => props.width};\n`;\n\nexport const InputSelect = styled(Select)``;\n","export const makeOptions = array => {\n    \n  const options = array.map(option => ({\n    value: option,\n    label: option,\n  }));\n    \n  return options;\n};\n","import { makeUniqueCarsAndSort } from '../../helpers/makeUniqueCarsAndSort';\nimport { InputSelect, SelectWrap } from './Select.styled';\nimport makes from '../../makes.json';\nimport { makeOptions } from '../../helpers/makeOptions';\nimport { makePriceArr } from '../../helpers/makePriceArr';\n\nexport const Select = ({\n  textLabel,\n  name,\n  carBrand,\n  width,\n  value,\n  handleChange,\n}) => {\n  const sortMakes = makeUniqueCarsAndSort(makes);\n  const brandOptions = makeOptions(sortMakes);\n  const priceOptions = makeOptions(makePriceArr());\n\n  return (\n    <SelectWrap width={width}>\n      <label htmlFor={name}>{textLabel}</label>\n      <InputSelect\n        id={name}\n        options={carBrand ? brandOptions : priceOptions}\n        value={value}\n        onChange={handleChange}\n        styles={{\n          control: baseStyles => ({\n            ...baseStyles,\n            backgroundColor: 'rgba(247, 247, 251, 1)',\n            borderRadius: '14px',\n            border: 'none',\n            height: '48px',\n            output: 'none',\n          }),\n          dropdownIndicator: (baseStyles, state) => ({\n            ...baseStyles,\n            transition: 'transform 0.5s',\n            transform: state.selectProps.menuIsOpen ? 'rotate(180deg)' : 'none',\n          }),\n        }}\n      />\n    </SelectWrap>\n  );\n};\n","export const makeUniqueCarsAndSort = array => {\n  const uniqueCars = array.filter(\n    (item, index, arr) => arr.indexOf(item) === index,\n  );\n\n  return uniqueCars.sort();\n};\n","export const makePriceArr = () => {\n  const priceArr = [];\n\n  for (let i = 30; i <= 500; i += 10) {\n    priceArr.push(i);\n  }\n\n  return priceArr;\n};\n","import styled from '@emotion/styled';\nimport { NumericFormat } from 'react-number-format';\n\nexport const FilterWrap = styled.form`\n  margin: 0 auto;\n  margin-top: 50px;\n  margin-bottom: 50px;\n  display: flex;\n  justify-content: center;\n  text-align: left;\n  flex-wrap: wrap;\n  gap: 18px;\n`;\n\nexport const MileageContainer = styled.div`\n  text-align: left;\n`;\n\nexport const Mileage = styled.div`\n  background-color: rgba(138, 138, 137, 0.2);\n  display: flex;\n  gap: 1px;\n\n  border: none;\n  border-radius: 14px;\n  overflow: hidden;\n`;\n\nexport const MileageWrap = styled.div`\n  position: relative;\n`;\n\nexport const Label = styled.p`\n  position: absolute;\n  left: 24px;\n  top: 15px;\n`;\n\nexport const Input = styled(NumericFormat)`\n  background-color: rgba(247, 247, 251, 1);\n  padding-left: ${props => props.padding};\n  width: 160px;\n  height: 48px;\n  border: none;\n  outline: none;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const SearchBtn = styled.button`\n  height: 48px;\n  padding: 14px 44px;\n  align-self: end;\n  border-radius: 12px;\n  cursor: pointer;\n  border: none;\n\n  background-color: rgba(52, 112, 255, 1);\n  transition: background-color 250ms ease-in-out;\n  color: #fff;\n\n  &:hover {\n    background-color: rgba(11, 68, 205, 1);\n  }\n\n  &:disabled {\n    background-color: #ddd;\n    cursor: not-allowed;\n  }\n`;\n","import { SearchBtn } from \"./SearchButton.styled\";\n\nexport const SearchButton = ({ handleSearchBtn, isDisabled }) => {\n    \n  return (\n    <SearchBtn onClick={handleSearchBtn} disabled={isDisabled}>\n      Search\n    </SearchBtn>\n  );\n};","import styled from '@emotion/styled';\n\nexport const ClearBtn = styled.button`\n  height: 48px;\n  padding: 14px 44px;\n  align-self: end;\n  border-radius: 12px;\n  cursor: pointer;\n  border: none;\n\n  background-color: rgba(52, 112, 255, 1);\n  transition: background-color 250ms ease-in-out;\n  color: #fff;\n\n  &:hover {\n    background-color: rgba(11, 68, 205, 1);\n  }\n\n  &:disabled {\n    background-color: #ddd;\n    cursor: not-allowed;\n  }\n`;\n","import { ClearBtn } from \"./ClearButton.styled\";\n\nexport const ClearButton = ({ handleClearBtn, isDisabled }) => {\n  return (\n    <ClearBtn onClick={handleClearBtn} disabled={isDisabled}>\n      Clear\n    </ClearBtn>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Select } from '../Select/Select';\nimport {\n  FilterWrap,\n  Input,\n  Label,\n  Mileage,\n  MileageContainer,\n  MileageWrap,\n} from './Filter.styled';\nimport { SearchButton } from '../Buttons/SearchButton/SearchButton';\nimport { ClearButton } from '../Buttons/ClearButton/ClearButton';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { fetchCarsFromFirstPage } from 'redux/cars/carsOperations';\n\nexport const Filter = ({ setShowBtn, setFiltering }) => {\n  const dispatch = useDispatch();\n  const [brandValue, setBrandValue] = useState({\n    value: '',\n    label: 'Enter the text',\n  });\n\n  const [priceValue, setPriceValue] = useState({\n    value: '',\n    label: 'To $',\n  });\n\n  const [price, setPrice] = useState('');\n  const [mileageMin, setMileageMin] = useState('');\n  const [mileageMax, setMileageMax] = useState('');\n  const [isDisabled, setIsDisabled] = useState(true);\n\n  useEffect(() => {\n    if (\n      brandValue.label !== 'Enter the text' ||\n      priceValue.label !== 'To $' ||\n      mileageMin !== '' ||\n      mileageMax !== ''\n    ) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n  }, [brandValue, mileageMax, mileageMin, priceValue]);\n\n  const handleChangeBrand = selectedPrice => {\n    setBrandValue({\n      value: selectedPrice.value,\n      label: selectedPrice.value,\n    });\n  };\n\n  const handleChangePrice = selectedPrice => {\n    const currentPrice = `To ${selectedPrice.value}$`;\n    setPriceValue({\n      value: currentPrice,\n      label: currentPrice,\n    });\n    setPrice(selectedPrice.value);\n  };\n\n  const handleChangeMileage = evt => {\n    const value = evt.target.value;\n\n    switch (evt.target.name) {\n      case 'mileageMin':\n        setMileageMin(value);\n        break;\n      case 'mileageMax':\n        setMileageMax(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSearchBtn = evt => {\n    evt.preventDefault();\n    const newFilterObj = {\n      make: brandValue.value.toLowerCase().trim(),\n      price: price || '500',\n      mileageMin: mileageMin.split(',').join('') || '0',\n      mileageMax: mileageMax.split(',').join('') || '99999',\n    };\n\n    dispatch(setFilter(newFilterObj));\n    setFiltering(true);\n  };\n\n  const handleClearBtn = evt => {\n    evt.preventDefault();\n    dispatch(fetchCarsFromFirstPage());\n\n    setBrandValue({\n      value: '',\n      label: 'Enter the text',\n    });\n\n    setPriceValue({\n      value: '',\n      label: 'To $',\n    });\n\n    setMileageMin('');\n    setMileageMax('');\n\n    setFiltering(false);\n    setShowBtn(true);\n  };\n\n  return (\n    <FilterWrap>\n      <Select\n        textLabel=\"Car brand\"\n        name=\"make\"\n        carBrand\n        width=\"224px\"\n        value={brandValue}\n        handleChange={handleChangeBrand}\n      />\n      <Select\n        textLabel=\"Price/ 1 hour\"\n        name=\"price\"\n        width=\"125px\"\n        value={priceValue}\n        handleChange={handleChangePrice}\n      />\n      <MileageContainer>\n        <label htmlFor=\"mileage\">Car mileage / km</label>\n        <Mileage>\n          <MileageWrap>\n            <Label>From</Label>\n            <Input\n              name=\"mileageMin\"\n              id=\"fromMileage\"\n              format=\"##,###\"\n              maxLength={6}\n              decimalScale={3}\n              thousandSeparator={true}\n              padding=\"67px\"\n              value={mileageMin}\n              onChange={handleChangeMileage}\n            />\n          </MileageWrap>\n\n          <MileageWrap>\n            <Label>To</Label>\n            <Input\n              name=\"mileageMax\"\n              id=\"toMileage\"\n              padding=\"45px\"\n              format=\"##,###\"\n              maxLength={6}\n              decimalScale={3}\n              thousandSeparator={true}\n              value={mileageMax}\n              onChange={handleChangeMileage}\n            />\n          </MileageWrap>\n        </Mileage>\n      </MileageContainer>\n\n      <SearchButton isDisabled={isDisabled} handleSearchBtn={handleSearchBtn} />\n      <ClearButton isDisabled={isDisabled} handleClearBtn={handleClearBtn} />\n    </FilterWrap>\n  );\n};\n","export const selectCars = state => state.cars;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n  color: rgba(52, 112, 255, 1);\n  background-color: transparent;\n  border: none;\n  padding: 0;\n  cursor: pointer;\n  transition: color 250ms ease-in-out;\n\n  &:hover {\n    color: rgba(11, 68, 205, 1);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { fetchAllCars } from 'redux/cars/carsOperations';\nimport { Button } from './LoadMoreBtn.styled';\n\nexport const LoadMoreBtn = ({ currentPage, setCurrentPage, setShowBtn }) => {\n  const dispatch = useDispatch();\n\n  const onLoadMore = async () => {\n    const { payload } = await dispatch(fetchAllCars(currentPage + 1));\n    setCurrentPage(prevPage => (prevPage += 1));\n    if (payload < 12) {\n      setShowBtn(false);\n    } else {\n      setShowBtn(true);\n    }\n  };\n\n  return <Button onClick={onLoadMore}>Load more</Button>;\n};\n","export const selectFilter = state => state.filter;\n","export const getFilteredCars = (payload, filter) => {\n  const getParsedValue = value => parseInt(value.replace(/\\D+/g, ''), 10);\n\n  const result = payload.filter(({ rentalPrice, make, mileage }) => {\n    const parsedValue = getParsedValue(rentalPrice);\n    return (\n      make.toLowerCase() === filter.make &&\n      parsedValue <= filter.price &&\n      mileage > filter.mileageMin &&\n      mileage < filter.mileageMax\n    );\n  });\n\n  return result;\n};\n","import { Filter } from 'components/Filter/Filter';\nimport { CarsList } from 'components/CarsList/CarsList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchAllCarsForFilter,\n  fetchCarsFromFirstPage,\n} from 'redux/cars/carsOperations';\nimport { useEffect } from 'react';\nimport { selectCars } from 'redux/cars/carsSelectors';\nimport { useState } from 'react';\nimport { LoadMoreBtn } from 'components/Buttons/LoadMoreBtn/LoadMoreBtn';\nimport { selectFilter } from 'redux/filter/filterSelectors';\nimport { getFilteredCars } from 'helpers/getFilteredCars';\n\nconst Catalog = () => {\n  const dispatch = useDispatch();\n  const { cars, isLoading } = useSelector(selectCars);\n  const filter = useSelector(selectFilter);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [showBtn, setShowBtn] = useState(true);\n  const [filtering, setFiltering] = useState(false);\n  const [visibleCars, setVisisbleCars] = useState([]);\n\n  useEffect(() => {\n    if (currentPage === 1) {\n      dispatch(fetchCarsFromFirstPage());\n      setShowBtn(true);\n    }\n  }, [currentPage, dispatch]);\n\n  useEffect(() => {\n    if (filtering) {\n      (async () => {\n        const { payload } = await dispatch(fetchAllCarsForFilter());\n        const filteredCars = await getFilteredCars(payload, filter);\n        setVisisbleCars(filteredCars);\n      })();\n    }\n  }, [dispatch, filter, filtering]);\n\n  return (\n    <>\n      <Filter setShowBtn={setShowBtn} setFiltering={setFiltering} />\n\n      {filtering ? (\n        visibleCars.length > 0 ? (\n          <CarsList data={visibleCars} />\n        ) : (\n          <p>Sorry, there’s no vehicle available</p>\n        )\n      ) : (\n        <CarsList data={cars} />\n      )}\n\n      {!filtering &&\n        (isLoading ? (\n          <div>Loading cars...</div>\n        ) : showBtn ? (\n          <LoadMoreBtn\n            currentPage={currentPage}\n            setCurrentPage={setCurrentPage}\n            setShowBtn={setShowBtn}\n          />\n        ) : (\n          <p>The end of the list</p>\n        ))}\n    </>\n  );\n};\n\nexport default Catalog;\n"],"names":["SelectWrap","styled","_templateObject","_taggedTemplateLiteral","props","width","InputSelect","Select","_templateObject2","makeOptions","array","map","option","value","label","_ref","textLabel","name","carBrand","handleChange","sortMakes","makes","filter","item","index","arr","indexOf","sort","brandOptions","priceOptions","priceArr","i","push","makePriceArr","_jsxs","children","_jsx","htmlFor","id","options","onChange","styles","control","baseStyles","_objectSpread","backgroundColor","borderRadius","border","height","output","dropdownIndicator","state","transition","transform","selectProps","menuIsOpen","FilterWrap","MileageContainer","Mileage","_templateObject3","MileageWrap","_templateObject4","Label","_templateObject5","Input","NumericFormat","_templateObject6","padding","SearchBtn","SearchButton","handleSearchBtn","isDisabled","onClick","disabled","ClearBtn","ClearButton","handleClearBtn","Filter","setShowBtn","setFiltering","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","brandValue","setBrandValue","_useState3","_useState4","priceValue","setPriceValue","_useState5","_useState6","price","setPrice","_useState7","_useState8","mileageMin","setMileageMin","_useState9","_useState10","mileageMax","setMileageMax","_useState11","_useState12","setIsDisabled","useEffect","handleChangeMileage","evt","target","selectedPrice","currentPrice","concat","format","maxLength","decimalScale","thousandSeparator","preventDefault","newFilterObj","make","toLowerCase","trim","split","join","setFilter","fetchCarsFromFirstPage","selectCars","cars","Button","LoadMoreBtn","currentPage","setCurrentPage","onLoadMore","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$dispatch","payload","_context","prev","next","fetchAllCars","sent","prevPage","stop","apply","arguments","selectFilter","getFilteredCars","rentalPrice","mileage","parsedValue","parseInt","replace","_useSelector","useSelector","isLoading","showBtn","filtering","visibleCars","setVisisbleCars","filteredCars","fetchAllCarsForFilter","_Fragment","length","CarsList","data"],"sourceRoot":""}